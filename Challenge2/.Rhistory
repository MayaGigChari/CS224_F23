install.packages("caret", dependencies = c("Depends", "Suggests"))
library(caret)
filterCtrl <- sbfControl(functions = rfSBF, method = "repeatedcv", repeats = 5)
set.seed(10)
train_genotype = read.csv("train.genotype.txt")
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
train_phenotype = read.csv("train.genotype.txt")
train_phenotype = read.csv("train.phenotype.txt")
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
train_phenotype = data.frame(read.csv("train.phenotype.txt"))
train_genotype = data.frame(read.csv("train.genotype.txt"))
train_phenotype = data.frame(read.csv("train.phenotype.txt"))
filterCtrl <- sbfControl(functions = rfSBF, method = "repeatedcv", repeats = 5)
set.seed(10)
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
source("~/Desktop/CS224/Challenge2/Challenge_2.R", echo=TRUE)
install.packages("caret", dependencies = c("Depends", "Suggests"))
ls
filterCtrl <- sbfControl(functions = rfSBF, method = "repeatedcv", repeats = 5)
set.seed(10)
xrfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
train_phenotype
train_genotype
train_genotype = read.csv("train.genotype.txt")
train_genotype
?sbf
dim(train_genotype)
dim(train_phenotype)
train_genotype = read.csv("X_train_df.csv")
train_genotype
filterCtrl <- sbfControl(functions = rfSBF, method = "repeatedcv", repeats = 5)
set.seed(10)
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
train_genotype
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype, sbfControl = filterCtrl)
?sbf
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
train_phenotype = read.csv("train.phenotype.txt")
rfWithFilter <- sbf(train_genotype, train_phenotype, sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:201], train_phenotype, sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype, sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[1], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[2], sbfControl = filterCtrl)
train_phenotype
train_phenotype[1]
train_genotype[1:200]
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[1], sbfControl = filterCtrl)
train_phenotype[1]
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[1], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:201], train_phenotype[1], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:10], train_phenotype[1], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[1], sbfControl = filterCtrl)
train_phenotype = data.frame(read.csv("train.phenotype.txt"))
train_phenotype
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
install.packages("gam")
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
library(gam)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
install.packages("gam")
library(gam)
install.packages("gam")
library(gam)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
rfWithFilter
train_genotype[1:200]
filterCtrl <- rfeControl(functions=rfFuncs, method="cv", number=3)
results <- rfe(x= train_genotype[1:200],y= train_phenotype[[1]], rfeControl=filterCtrl)
train_phenotype[[1]]
train_genotype[1:200]
results <- rfe(x= train_genotype,y= train_phenotype[[1]], rfeControl=filterCtrl)
results <- rfe(train_genotype,train_phenotype[[1]], rfeControl=filterCtrl)
?rfe
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sizes=c(1:200), sbfControl = filterCtrl)
rfWithFilter <- sbf(x = train_genotype[1:200], y = train_phenotype[[1]], sizes=c(1:200), sbfControl = filterCtrl)
results <- rfe(train_genotypep[1:200],train_phenotype[[1]], sizes=c(1:200), rfeControl=filterCtrl)
results <- rfe(train_genotype[1:200],train_phenotype[[1]], sizes=c(1:200), rfeControl=filterCtrl)
nrow(train_genotype)
nrow(train_phenotpye)
nrow(train_phenotype)
len(train_phenotype[[1]])
length(train_phenotype[[1]])
train_genotype = read.csv("train.phenotype.txt")
train_genotype
train_genotype = read.csv("train.genotype.txt")
train_genotype
library(readr)
X_train_df <- read_csv("X_train_df.csv")
View(X_train_df)
train_genotype = X_train_df
train_genotype
dim(train_genotype)
train_genotype = data.frame(X_train_df)
train_genotype
dim(train_genoptype)
dim(train_genoptype)
train_genotype
train_genotype = data.frame(X_train_df)
dim(train_genoptype)
dim(train_genotype)
filterCtrl <- sbfControl(functions = rfSBF, method = "repeatedcv", repeats = 5)
set.seed(10)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
rfWithFilter #this tells us that nothing is useful.
filterCtrl <- rfeControl(functions=rfFuncs, method="cv", number=3)
results <- rfe(train_genotype[1:200],train_phenotype[[1]], sizes=c(1:200), rfeControl=filterCtrl)
len(train_genotype)
length(train_genotype)
length(train_genotype[1])
dim(train_genotype)
length(train_phenotype[[1]])
View(rfWithFilter)
length(train_phenotype[1])
length(train_phenotype)
dim(train_phenotype)
View(train_phenotype)
train_phenotype = data.frame(read.table("train.phenotype.txt"))
dim(train_phenotype)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[1], sbfControl = filterCtrl)
train_phenotype[1]
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
rfWithFilter <- sbf(train_genotype[1:200], train_phenotype[[1]], sbfControl = filterCtrl)
train_genotype[1:200]
train_phenotype[[1]]
results <- rfe(train_genotype[1:200],train_phenotype[[1]], sizes=c(1:200), rfeControl=filterCtrl)
print(results)
